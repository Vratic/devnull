SETT

{
    "[javascriptreact]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "files.associations": {
        "*.js": "javascriptreact"
    },
    // "eslint.autoFixOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    "editor.minimap.enabled": false,
    "window.zoomLevel": 1,
    "explorer.confirmDelete": false,
    "workbench.activityBar.visible": true,
    "editor.tabSize": 2,
    "files.autoSave": "afterDelay",
    "stylelint.autoFixOnSave": true,
    "tabnine.experimentalAutoImports": true,
    "terminal.integrated.shell.windows": "C:\\Users\\beleni\\AppData\\Local\\Programs\\Git\\bin\\bash.exe",
    "workbench.colorCustomizations" : {
        "terminal.foreground" : "#caf0f8",
        "terminal.background" : "#383737"
    },
    "stylelint.useLocal": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "files.saveConflictResolution": "overwriteFileOnDisk",
    "editor.formatOnSave": true,
    
}


KEY
// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+alt+.",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "alt+d",
    "command": "deleteWordEndRight"
  }
]

SNIPPETS
{
	"console" : {
		"prefix" : "cl",
		"body" : [
			"console.log($1)",
		],
		"description": "Log output to console"
	},
	"update": {
		"prefix": "sd",
		"body": [
			"static getDerivedStateFromProps(props, state) {",
			"\t$1",
			"\treturn { }",
			"}"
		]
	},
	"constructor": {
		"prefix": "cc",
		"body": [
			"constructor(props) {",
			"\tsuper(props)",
			"",
			"\tthis.state = {",
			"\t\t$1",
			"\t}",
			"}"
		]
	},
	"new class" : {
		"prefix" : "rc",
		"body" : [
			"import React from 'react'",
			"import { connect } from 'react-redux'",
			"import PropTypes from 'prop-types'",
			"import deepEqual from 'deep-equal'",
			"",
			"const mapStateToProps = (state, ownProps) => {",
			"\treturn ({",
			"",
			"\t})",
			"}",
			"",
			"const mapDispatchToProps = {",
			"",
			"}",
			"",
			"export class $1 extends React.Component {",
			"\tstatic propTypes = {",
			"",
			"\t}",
			"",
			"\tshouldComponentUpdate(nextProps, nextState) {",
			"\t\treturn !deepEqual(nextProps, this.props) || !deepEqual(nextState, this.state)",
			"\t}",
			"",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<div>$1</div>",
			"\t\t)",
			"\t}",
			"}",
			"",			
			"export default connect(mapStateToProps, mapDispatchToProps)($1)"
		],
		"description": "React JS new class"
	}
}
